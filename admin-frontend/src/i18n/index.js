import enShared from '../../../shared-i18n/en.json';
import esShared from '../../../shared-i18n/es.json';
import { createI18n } from 'vue-i18n';

const adminExtra = {
  en: {
  requiredField: 'Required', invalidUrl: 'Invalid URL', invalidRange: 'Out of range', valMax120: 'Max 120 chars', valTooShort: 'Too short', valMin1: 'Min 1', valInvalid: 'Invalid', valMax1MB: 'Max 1MB', valRange1to60: '1-60',
  audioSource: 'Audio Source', useRemoteAudio: 'Remote (Default)', useCustomAudio: 'Custom', chatUrlPlaceholder: 'https://odysee.com/$/livestream/...', socialMediaAddItem: 'Add Item', socialMediaName: 'Name', socialMediaLink: 'Link (URL)', socialMediaIcon: 'Icon', socialMediaCustomIcon: 'Custom Icon', socialMediaIconCustom: 'Custom', socialMediaIconX: 'X (Twitter)', socialMediaIconInstagram: 'Instagram', socialMediaIconYoutube: 'YouTube', socialMediaIconTelegram: 'Telegram', socialMediaIconDiscord: 'Discord', socialMediaIconOdysee: 'Odysee', socialMediaIconRumble: 'Rumble', socialMediaDelete: 'Delete', socialMediaSave: 'Save List', socialMediaLoadFailed: 'Failed to load social media config', socialMediaSaved: 'Social media config saved', socialMediaSaveFailed: 'Failed to save social media config', socialMediaValidationError: 'Validation error', socialMediaTooMany: 'Too many items (max 50)', socialMediaNameRequired: 'Name is required', socialMediaNameTooLong: 'Name is too long', socialMediaLinkRequired: 'Link is required', socialMediaLinkTooLong: 'Link is too long', socialMediaInvalidUrl: 'Invalid URL', socialMediaInvalidHttps: 'Must be a valid HTTPS URL', socialMediaCustomIconInvalid: 'Custom icon must be a data:image/* base64 URL', socialMediaCustomIconTooLarge: 'Custom icon is too large', externalNotificationsTitle: 'Integrations', externalDiscordWebhook: 'Discord Webhook URL', externalTelegramBotToken: 'Telegram Bot Token', externalTelegramChatId: 'Telegram Chat ID', externalTemplate: 'Template', externalTemplateHint: 'Available vars: {from} {amount} {usd} {message}', externalSave: 'Save Settings', externalStatusActive: 'Active', externalStatusInactive: 'Inactive', externalSaved: 'External notifications saved', externalSaveFailed: 'Failed to save external notifications', externalValidationError: 'Either Discord webhook or Telegram credentials are required', integrationsIntro: 'Customize your experience with Discord or Telegram webhook integrations. Manage webhooks to send notifications for tips or when your channel goes live.', announcementSettings: 'Settings', announcementTheme: 'Theme', announcementBgColor: 'Background Color', announcementTextColor: 'Text Color', announcementAnimationMode: 'Animation', announcementCooldownSeconds: 'Cooldown (minutes)', announcementDefaultDuration: 'Default Duration (s)', announcementApplyAll: 'Apply to all durations', announcementAddMessage: 'Add Message', announcementText: 'Text', announcementLinkUrl: 'Link URL', announcementDurationSeconds: 'Duration (s)', announcementImage: 'Image', announcementEnabled: 'Enabled', announcementSavedSettings: 'Announcement settings saved', announcementSaveSettingsFailed: 'Failed to save announcement settings', announcementMsgDeleted: 'Announcement deleted', announcementMsgDeleteFailed: 'Failed to delete announcement', announcementFaviconFetch: 'Fetch Favicon', announcementFaviconNone: 'No favicon', announcementClearAll: 'Clear All', announcementClearTest: 'Clear Test', announcementCleared: 'Announcements cleared', announcementClearFailed: 'Failed to clear announcements', announcementInvalidImageType: 'Invalid image type', announcementAnimationFade: 'Fade', announcementAnimationSlideUp: 'Slide Up', announcementAnimationSlideLeft: 'Slide Left', announcementAnimationScale: 'Scale', announcementAnimationRandom: 'Random', commonEdit: 'Edit', commonDelete: 'Delete', commonSave: 'Save', commonClose: 'Close', announcementFavicon: 'Favicon', announcementSiteUrl: 'Site URL', commonSaving: 'Saving...', commonLoading: 'Loading...', commonAdd: 'Add', commonAdding: 'Adding...', commonUpdating: 'Updating...', charsUsed: '{used}/{max}', liveviewsTitle: 'Viewer Count', liveviewsBg: 'Background', liveviewsColor: 'Color', liveviewsFont: 'Font', liveviewsSize: 'Font Size', liveviewsRemoveIcon: 'Remove Icon', liveviewsUploadIcon: 'Upload Icon', liveviewsSave: 'Save Liveviews', liveviewsSaved: 'Liveviews settings saved', liveviewsSaveFailed: 'Failed to save liveviews settings', tipGoalCustomTitleLabel: 'Custom Title', tipGoalCustomTitlePlaceholder: 'Configure tip goal 💸', tipGoalCustomTitleHint: 'Displayed above the goal progress.', chatClaimId: 'ClaimID of your livestream post', savedTipGoal: 'Tip goal saved', saveFailedTipGoal: 'Failed to save tip goal', loadFailedTipGoal: 'Failed to load tip goal', savedLastTip: 'Last tip settings saved', saveFailedLastTip: 'Failed to save last tip', loadFailedLastTip: 'Failed to load last tip', savedChat: 'Chat settings saved', saveFailedChat: 'Failed to save chat settings', loadFailedChat: 'Failed to load chat settings', urlCopied: 'URL copied to clipboard', statusTitle: 'Status', statusModules: 'Modules', statusSystem: 'System', statusLocale: 'Locale', statusTime: 'Time', statusAnnouncements: '{enabled}/{total} enabled', statusItems: '{n} items', statusEntries: '{n} entries', statusUptime: 'Uptime', statusWsClients: 'WS Clients', statusSeconds: '{n} s', statusMinutes: '{n} min', statusHours: '{n} h', statusDays: '{n} d', raffleWarningTitle: 'Warning:', raffleWarningChat: 'Make sure that chat is enabled so that commands are received.', raffleCommandLabel: 'Command', raffleCommandPlaceholder: '!giveaway', raffleCommandHint: 'Chat command users type to enter.', raffleLastWinner: 'Last Winner', raffleImageTooLarge: 'Image too large (max 1MB)', raffleImageUploaded: 'Image uploaded', raffleImageUploadFailed: 'Image upload failed', savedRaffleSettings: 'Raffle settings saved', saveFailedRaffleSettings: 'Failed to save raffle settings', raffleStarted: 'Raffle started', raffleStopped: 'Raffle stopped', rafflePaused: 'Raffle paused', raffleResumed: 'Raffle resumed', raffleWinnerDrawn: 'Winner drawn', raffleReset: 'Winners reset', raffleActionFailed: 'Action failed', statusRaffleWinners: 'Winners: {n}',
    raffleSettings: 'Raffle settings',
    sessionTools: 'Session tools',
    regeneratePublicToken: 'Regenerate token',
    exportConfig: 'Export config',
    importConfig: 'Import config',
    tokenRegenerated: 'Public token regenerated',
    commonCopy: 'Copy',
    newSession: 'New session',
    importedOk: 'Imported successfully',
    valArweaveOnly: 'Enter a valid Arweave wallet address (43 chars, base64url)',
    walletClearHint: 'Leave empty to clear your wallet address',
    statusMaskedTooltip: 'Statuses are hidden for viewers without a session',
    raffleSessionRequiredTitle: 'Session required',
    raffleSessionRequiredBody: 'Create a session to configure and use Raffle. This protects your settings.',
    createSession: 'Create session',
    raffleSessionRequiredToast: 'Start a session to use Raffle actions',
    externalSessionRequiredTitle: 'Session required',
    externalSessionRequiredBody: 'Create a session to configure External notifications. This protects your tokens and URLs.',
    externalSessionRequiredToast: 'Start a session to update External notifications',
    sessionRequiredToast: 'Start a session to perform this action',
    exportPublicToken: 'Export public token',
    tokenNudgeTitle: 'Create your session token',
    tokenNudgeBody: 'This token isolates your widgets and data in hosted mode so live updates and WebSocket events are routed only to your session.',
    createTokenNow: 'Create token',
    whyNeedToken: 'Why do I need this?',
    maybeLater: 'Maybe later',
    tokenModalTitle: 'Why create a token?',
    tokenModalBody: 'In hosted mode, a token separates your data from other users, enables secure real-time updates for widgets, and lets you share a public token for overlays without exposing your admin token.',
    tokenNudgeDismissed: 'Reminder dismissed. You can create the token later in Session tools.',
    streamHistoryTitle: 'Stream History',
    streamHistoryClaimId: 'Channel ClaimID',
    streamHistoryPeriod: 'Period',
    periodDay: 'Day',
    periodWeek: 'Week',
    periodMonth: 'Month',
    periodYear: 'Year',
    streamHistorySpan: 'Range',
    chartLine: 'Line',
    chartCandle: 'Candles',
    streamHistoryHint: 'Bars show total live hours per bucket since tracking began here. Gray means 0 hours for that day/week/month.',
    commonRefresh: 'Refresh',
    kpiHoursStreamed: 'Hours streamed',
    kpiAvgViewers: 'Average viewers',
    kpiPeakViewers: 'Peak viewers',
    kpiHoursWatched: 'Hours watched',
    kpiActiveDays: 'Active days',
    kpiTotalHoursStreamed: 'Total hours streamed',
    kpiHighestViewers: 'Highest viewers',
    savedStreamHistory: 'Stream history saved',
    saveFailedStreamHistory: 'Failed to save stream history',
    streamHistoryBackfillHint: 'Backfill current live segment:',
    streamHistoryBackfilled: 'Backfilled stream history',
    streamHistoryBackfillFailed: 'Backfill failed',
    streamHistoryClear: 'Clear history',
    streamHistoryClearConfirm: 'This will delete all chart history. Continue?',
    streamHistoryCleared: 'History cleared',
    streamHistoryClearFailed: 'Failed to clear history',
    streamHistoryExport: 'Export',
    streamHistoryExportFailed: 'Export failed',
    streamHistoryImport: 'Import',
    streamHistoryImported: 'Imported history',
    streamHistoryImportFailed: 'Import failed',
    streamHistoryClaimChangeClearConfirm: 'ClaimID changed. Clear the existing chart history to start fresh? You can Export first to keep a backup.',
    activity: 'Activity',
    tipNotificationsTitle: 'Tip notifications'
  },
  es: {
    raffleSettings: 'Configuración del sorteo',
    sessionTools: 'Herramientas de sesión',
    regeneratePublicToken: 'Regenerar token',
    exportConfig: 'Exportar configuración',
    importConfig: 'Importar configuración',
    tokenRegenerated: 'Token público regenerado',
    commonCopy: 'Copiar',
    newSession: 'Nueva sesión',
    importedOk: 'Importación exitosa',
    valArweaveOnly: 'Ingresa una billetera Arweave válida (43 caracteres, base64url)',
    walletClearHint: 'Déjalo vacío para limpiar tu dirección de billetera',
    statusMaskedTooltip: 'Los estados se ocultan para quienes no tienen sesión',
    raffleSessionRequiredTitle: 'Se requiere sesión',
    raffleSessionRequiredBody: 'Crea una sesión para configurar y usar el Sorteo. Esto protege tu configuración.',
    createSession: 'Crear sesión',
    raffleSessionRequiredToast: 'Inicia una sesión para usar las acciones del Sorteo',
    externalSessionRequiredTitle: 'Se requiere sesión',
    externalSessionRequiredBody: 'Crea una sesión para configurar las Notificaciones externas. Esto protege tus tokens y URLs.',
    externalSessionRequiredToast: 'Inicia una sesión para actualizar Notificaciones externas',
    sessionRequiredToast: 'Inicia una sesión para realizar esta acción',
    exportPublicToken: 'Exportar token',
    tokenNudgeTitle: 'Crea tu token de sesión',
    tokenNudgeBody: 'Este token aísla tus widgets y datos en modo hosted para que las actualizaciones y eventos en tiempo real lleguen solo a tu sesión.',
    createTokenNow: 'Crear token',
    whyNeedToken: '¿Por qué necesito esto?',
    maybeLater: 'Más tarde',
    tokenModalTitle: '¿Por qué crear un token?',
    tokenModalBody: 'En modo hosted, un token separa tus datos de otros usuarios, habilita actualizaciones seguras en tiempo real para los widgets y permite compartir un token público para overlays sin exponer tu token de administración.',
    tokenNudgeDismissed: 'Recordatorio ocultado. Puedes crear el token más tarde en Herramientas de sesión.',
    streamHistoryTitle: 'Historial de transmisiones',
    streamHistoryClaimId: 'ClaimID del canal',
    streamHistoryPeriod: 'Periodo',
    periodDay: 'Día',
    periodWeek: 'Semana',
    periodMonth: 'Mes',
    periodYear: 'Año',
    streamHistorySpan: 'Rango',
    chartLine: 'Líneas',
    chartCandle: 'Velas',
    streamHistoryHint: 'Las barras muestran horas en vivo por período desde que se empezó a registrar aquí. Gris indica 0 horas ese día/semana/mes.',
    commonRefresh: 'Actualizar',
    kpiHoursStreamed: 'Horas en vivo',
    kpiAvgViewers: 'Promedio de espectadores',
    kpiPeakViewers: 'Pico de espectadores',
    kpiHoursWatched: 'Horas vistas',
    kpiActiveDays: 'Días activos',
    kpiTotalHoursStreamed: 'Total horas en vivo',
    kpiHighestViewers: 'Máximo de espectadores',
    savedStreamHistory: 'Historial de stream guardado',
    saveFailedStreamHistory: 'No se pudo guardar el historial',
    streamHistoryBackfillHint: 'Rellenar el segmento en vivo actual:',
    streamHistoryBackfilled: 'Historial rellenado',
    streamHistoryBackfillFailed: 'Error al rellenar',
    streamHistoryClear: 'Limpiar historial',
    streamHistoryClearConfirm: 'Esto eliminará todo el historial de la gráfica. ¿Continuar?',
    streamHistoryCleared: 'Historial limpiado',
    streamHistoryClearFailed: 'Error al limpiar historial',
    streamHistoryExport: 'Exportar',
    streamHistoryExportFailed: 'Error al exportar',
    streamHistoryImport: 'Importar',
    streamHistoryImported: 'Historial importado',
    streamHistoryImportFailed: 'Error al importar',
    streamHistoryClaimChangeClearConfirm: 'El ClaimID cambió. ¿Limpiar el historial de la gráfica para empezar de cero? Puedes Exportar antes para hacer un respaldo.',
    activity: 'Actividad',
    tipNotificationsTitle: 'Notificaciones de propinas'
  }
};

adminExtra.en.quickToday = 'Per day';
adminExtra.en.quickThisWeek = 'Per week';
adminExtra.en.quickThisMonth = 'Per month';
adminExtra.en.quickThisYear = 'Per year';

adminExtra.es.quickToday = 'Por día';
adminExtra.es.quickThisWeek = 'Por semana';
adminExtra.es.quickThisMonth = 'Por mes';
adminExtra.es.quickThisYear = 'Por año';

const merge = (base, extra) => ({ ...base, ...extra });
const messages = {
  en: merge(enShared, adminExtra.en),
  es: merge(esShared, adminExtra.es),
};

const i18n = createI18n({ legacy: false, locale: 'en', fallbackLocale: 'en', messages });
export default i18n;
